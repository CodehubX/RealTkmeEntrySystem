/*
 * Copyright (c) FOREVER, Jefferson Buot. All rights reserved.
 * Build | Imagine | Think | Explore -> By: Jeff 
 */
package artemis.client_module;

import artemis.classes.ClientAccount;
import artemis.classes.NetCon;
import artemis.classes.XMLParser;
import artemis.dialogs.ArtemisMessage;
import artemis.dialogs.ArtemisPrompt;
import artemis.dialogs.ErrorDialog;
import artemis.panels.ConnectionConfig;
import com.alee.extended.window.WebPopOver;
import com.alee.laf.WebLookAndFeel;
import com.alee.managers.hotkey.ButtonHotkeyRunnable;
import com.alee.managers.hotkey.Hotkey;
import com.alee.managers.hotkey.HotkeyManager;
import com.alee.managers.language.data.TooltipWay;
import com.alee.managers.tooltip.TooltipManager;
import java.awt.Color;
import java.awt.Component;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.UIManager;

/**
 *
 * @author Jefferson
 */
public class ClientLogin extends javax.swing.JPanel {

    /**
     * Creates new form Login
     */
    WebPopOver popOver;

    NetCon nc;
    Socket socket;
    ArtemisPrompt load;
    ImageIcon infoIcon = new ImageIcon(getClass().getResource("/artemis/img/Message-Warning.png"));

    public ClientLogin(WebPopOver popOver) {
        this.popOver = popOver;
        initComponents();
        nc = XMLParser.loadNetCon(new File("nc.xml"));
        load = new ArtemisPrompt(popOver, "Connecting please wait...");
        HotkeyManager.registerHotkey(this, btnSubmit, Hotkey.ENTER, new ButtonHotkeyRunnable(btnSubmit, 50), TooltipWay.trailing);
    }

    public static void showDialog(Component comp) {
        WebPopOver view = new WebPopOver(comp);
        view.setCloseOnFocusLoss(false);
        view.setModal(true);
        view.setMargin(0);
        view.add(new ClientLogin(view));
        //Center
        int x = Toolkit.getDefaultToolkit().getScreenSize().width / 2 - (int) view.getPreferredSize().getWidth() / 2;
        int y = Toolkit.getDefaultToolkit().getScreenSize().height / 2 - (int) view.getPreferredSize().getHeight() / 2;
        System.out.println(view.getPreferredSize().getWidth());
        view.show(x, y);
//        view.setLo
    }

    public static void main(String[] args) {
        try {
            WebLookAndFeel.install();
            UIManager.setLookAndFeel("de.javasoft.plaf.synthetica.SyntheticaAluOxideLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            ErrorDialog.showDialog(ex);
        }
        showDialog(new JFrame());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsername = new com.alee.laf.text.WebTextField();
        btnSubmit = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txtPassword = new com.alee.laf.text.WebPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        webButton1 = new com.alee.laf.button.WebButton();
        panLock = new javax.swing.JPanel();
        lblLockMsg = new javax.swing.JLabel();

        txtUsername.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtUsername.setHideInputPromptOnFocus(false);
        txtUsername.setInputPrompt("Username");
        txtUsername.setRound(8);

        btnSubmit.setBackground(new java.awt.Color(51, 51, 51));
        btnSubmit.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        btnSubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artemis/img/login.png"))); // NOI18N
        btnSubmit.setText("Login");
        btnSubmit.setHideActionText(true);
        btnSubmit.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artemis/img/settings_login.png"))); // NOI18N
        jButton3.setText("Config");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        txtPassword.setHideInputPromptOnFocus(false);
        txtPassword.setInputPrompt("Password");
        txtPassword.setRound(8);

        jPanel1.setBackground(new java.awt.Color(81, 81, 81));

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 20)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Advance Real-Time Electronic Management Information System");

        webButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artemis/img/exit.png"))); // NOI18N
        webButton1.setUndecorated(true);
        webButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(webButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 4, Short.MAX_VALUE))
            .addComponent(webButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        panLock.setBackground(new java.awt.Color(0, 153, 102));

        lblLockMsg.setFont(new java.awt.Font("Segoe UI Semilight", 0, 18)); // NOI18N
        lblLockMsg.setForeground(new java.awt.Color(255, 255, 255));
        lblLockMsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLockMsg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artemis/img/user_login2.png"))); // NOI18N
        lblLockMsg.setText("Client Login");
        lblLockMsg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblLockMsg.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout panLockLayout = new javax.swing.GroupLayout(panLock);
        panLock.setLayout(panLockLayout);
        panLockLayout.setHorizontalGroup(
            panLockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panLockLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLockMsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panLockLayout.setVerticalGroup(
            panLockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLockMsg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panLock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(314, 314, 314)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panLock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void webButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webButton1ActionPerformed
        popOver.dispose();
        System.exit(0);
    }//GEN-LAST:event_webButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        nc = ConnectionConfig.showDialog(popOver, nc);
        XMLParser.saveData(new File("nc.xml"), nc);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        submit();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void submit() {
        try {
            String username = txtUsername.getText().trim();
            String password = txtPassword.getText();
            if (username.equals("")) {
                TooltipManager.showOneTimeTooltip(txtUsername, null, infoIcon, "Please enter your username.");
                return;
            }
            if (password.equals("")) {
                TooltipManager.showOneTimeTooltip(txtPassword, null, infoIcon, "Please enter your password.");
                return;
            }
            load.showDialog();
            socket = new Socket(nc.getHost(), nc.getPort());
            load.closeDialog();
            ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
            ObjectInputStream in = new ObjectInputStream(socket.getInputStream());
            //sending credentials
            out.writeObject(new String[]{txtUsername.getText(), txtPassword.getText()});
            out.flush();

            //map validity.id.fn.ln.un.accessType.accessStatus
            ClientAccount account = (ClientAccount) in.readObject();
            if (account == null) {
//                TooltipManager.showOneTimeTooltip(btnSubmit, null, "Your username/password does not exist.");
                showLock("Your have input wrong username/password.");
                return;
            } else if (account.getAccessStatus().equals("Locked")) {
//                TooltipManager.showOneTimeTooltip(btnSubmit, null, "Your account is locked, please contact your administrator.");
                showLock("Your account is locked, please contact your administrator.");
                return;
            } else if (account.getAccessStatus().equals("Draft")) {
//                TooltipManager.showOneTimeTooltip(btnSubmit, null, "Please be notice that your account has been removed by the administrator");
                showLock("Please be notice that your account has been removed by the administrator");
                return;
            } else if (!account.isCanLogin()) {
//                TooltipManager.showOneTimeTooltip(btnSubmit, null, "Server denied your access, this account is already logged in.");
                showLock("Server denied your access, this account is already logged in.");
                return;
            }
            lblLockMsg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artemis/img/Lock-Open.png")));
            lblLockMsg.setText("Access Granted!");
            panLock.setBackground(new Color(0, 153, 102));
            java.awt.EventQueue.invokeLater(() -> {
                try {
                    Thread.sleep(900);
                } catch (InterruptedException ex) {
                    Logger.getLogger(ClientLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
                new ClientDashboard(out, in, socket.getPort(), socket.getInetAddress().getHostAddress(), account).setVisible(true);
                popOver.dispose();
            });
        } catch (IOException | ClassNotFoundException e) {
            load.closeDialog();
            ArtemisMessage.showDialog(popOver, "Unable to connect server.");
        }
    }

    private void showLock(String message) {
        lblLockMsg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/artemis/img/Lock.png")));
        lblLockMsg.setText(message);
        panLock.setBackground(new Color(255, 102, 102));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblLockMsg;
    private javax.swing.JPanel panLock;
    private com.alee.laf.text.WebPasswordField txtPassword;
    private com.alee.laf.text.WebTextField txtUsername;
    private com.alee.laf.button.WebButton webButton1;
    // End of variables declaration//GEN-END:variables
}
